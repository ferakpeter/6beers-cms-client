// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Beer        = require("./components/beer.js");
var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Footer      = require("./components/footer.js");
var Header      = require("./components/header.js");
var $$String    = require("bs-platform/lib/js/string.js");
var Brewery     = require("./components/brewery.js");
var Contact     = require("./components/contact.js");
var Caml_obj    = require("bs-platform/lib/js/caml_obj.js");
var Caml_array  = require("bs-platform/lib/js/caml_array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Json_decode = require("bs-json/lib/js/src/json_decode.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

function click(_, _$1) {
  console.log("clicked!");
  return /* () */0;
}

var component = ReasonReact.statefulComponent("App");

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      var parseConfig = function (json) {
        console.log("received json");
        console.log(json);
        var img = function (jsonValue) {
          return /* record */[
                  /* src */Json_decode.field("src", Json_decode.string, jsonValue),
                  /* width */Json_decode.field("width", Json_decode.$$int, jsonValue),
                  /* height */Json_decode.field("height", Json_decode.$$int, jsonValue)
                ];
        };
        var picture = function (jsonValue) {
          return /* record */[
                  /* id */Json_decode.field("id", Json_decode.string, jsonValue),
                  /* img */Json_decode.field("img", img, jsonValue),
                  /* caption */Json_decode.field("caption", Json_decode.string, jsonValue)
                ];
        };
        var newsItem = function (jsonValue) {
          return /* record */[
                  /* id */Json_decode.field("id", Json_decode.string, jsonValue),
                  /* headline */Json_decode.field("headline", Json_decode.string, jsonValue),
                  /* subheadline */Json_decode.field("subheadline", Json_decode.string, jsonValue),
                  /* teaser */Json_decode.field("teaser", Json_decode.string, jsonValue),
                  /* picture */Json_decode.field("picture", picture, jsonValue)
                ];
        };
        var newsItems = function (jsonValue) {
          return Json_decode.list(newsItem, jsonValue);
        };
        var jsonValue = json;
        return /* record */[
                /* response */Json_decode.field("response", newsItems, jsonValue),
                /* status */Json_decode.field("status", Json_decode.string, jsonValue)
              ];
      };
      var mapJsonValuesToBeer = function (cmsContent) {
        console.log(cmsContent);
        var headlines = List.map((function (item) {
                return item[/* headline */1];
              }), cmsContent[/* response */0]);
        var beercodes = List.sort_uniq(Caml_obj.caml_compare, List.map((function (item) {
                    var match = new RegExp("beer-(\\w+).*").exec(item);
                    if (match !== null) {
                      var match$1 = +(match.length <= 2);
                      if (match$1 !== 0) {
                        return Caml_array.caml_array_get(match, 1);
                      } else {
                        return "";
                      }
                    } else {
                      return "";
                    }
                  }), headlines));
        return List.map((function (beercode) {
                      var beerInfo = List.find((function (item) {
                              return +new RegExp($$String.concat("", /* :: */[
                                                "beer-",
                                                /* :: */[
                                                  beercode,
                                                  /* [] */0
                                                ]
                                              ])).test(item[/* headline */1]);
                            }), cmsContent[/* response */0]);
                      var beerDetail = List.find((function (item) {
                              return +new RegExp($$String.concat("", /* :: */[
                                                "beer-",
                                                /* :: */[
                                                  beercode,
                                                  /* :: */[
                                                    "-detail",
                                                    /* [] */0
                                                  ]
                                                ]
                                              ])).test(item[/* headline */1]);
                            }), cmsContent[/* response */0]);
                      var parseBeerSubheadline = function (value) {
                        var parsedMatch = new RegExp("(.+)\\/(.+)").exec(value);
                        if (parsedMatch !== null) {
                          return /* record */[
                                  /* name */Caml_array.caml_array_get(parsedMatch, 1),
                                  /* id */Caml_format.caml_int_of_string(Caml_array.caml_array_get(parsedMatch, 2))
                                ];
                        } else {
                          return /* record */[
                                  /* name */"",
                                  /* id */0
                                ];
                        }
                      };
                      var parseBeerDetailSubheadline = function (value) {
                        var parsedMatch = new RegExp("(.+)\\/(.+)\\/(.+)\\/(.+)").exec(value);
                        if (parsedMatch !== null) {
                          return /* record */[
                                  /* priceSmall */Caml_format.caml_float_of_string(Caml_array.caml_array_get(parsedMatch, 1)),
                                  /* priceLarge */Caml_format.caml_float_of_string(Caml_array.caml_array_get(parsedMatch, 2)),
                                  /* quantitySmall */Caml_format.caml_int_of_string(Caml_array.caml_array_get(parsedMatch, 3)),
                                  /* quantityLarge */Caml_format.caml_int_of_string(Caml_array.caml_array_get(parsedMatch, 4))
                                ];
                        } else {
                          return /* record */[
                                  /* priceSmall */0.0,
                                  /* priceLarge */0.0,
                                  /* quantitySmall */0,
                                  /* quantityLarge */0
                                ];
                        }
                      };
                      var beerSubheadline = parseBeerSubheadline(beerInfo[/* subheadline */2]);
                      var beerDetailSubheadline = parseBeerDetailSubheadline(beerDetail[/* subheadline */2]);
                      return /* record */[
                              /* id */beerSubheadline[/* id */1],
                              /* code */beercode,
                              /* name */beerSubheadline[/* name */0],
                              /* description */beerInfo[/* teaser */3],
                              /* priceSmall */beerDetailSubheadline[/* priceSmall */0],
                              /* priceLarge */beerDetailSubheadline[/* priceLarge */1],
                              /* quantitySmall */beerDetailSubheadline[/* quantitySmall */2],
                              /* quantityLarge */beerDetailSubheadline[/* quantityLarge */3],
                              /* bottleImageLink */$$String.concat("", /* :: */[
                                    "http://www.6beers.at/cms/",
                                    /* :: */[
                                      beerInfo[/* picture */4][/* img */1][/* src */0],
                                      /* [] */0
                                    ]
                                  ]),
                              /* glassImageLink */"",
                              /* labelImageLink */beerDetail[/* picture */4][/* img */1][/* src */0]
                            ];
                    }), beercodes);
      };
      var changeState = function (beers, self) {
        var init = self[/* state */3];
        return /* Update */Block.__(0, [/* record */[
                    /* availableBeers */beers,
                    /* selectedBeers */init[/* selectedBeers */1],
                    /* shoppingCart */init[/* shoppingCart */2]
                  ]]);
      };
      fetch("http://www.6beers.at/cms/index.php/api.html?modul=NewsList").then((function (prim) {
                return prim.json();
              })).then((function (result) {
              return Promise.resolve(Curry._2(self[/* update */2], changeState, List.filter((function (item) {
                                      return +((item[/* quantityLarge */7] + item[/* quantitySmall */6] | 0) > 0);
                                    }))(mapJsonValuesToBeer(parseConfig(result)))));
            }));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (param) {
      var beers = List.map((function (b) {
              return ReasonReact.element(/* Some */[b[/* code */1]], /* None */0, Beer.make(b, /* array */[]));
            }), param[/* state */3][/* availableBeers */0]);
      return React.createElement("div", {
                  className: "App"
                }, ReasonReact.element(/* None */0, /* None */0, Header.make(/* array */[])), React.createElement("div", {
                      className: "wrapper"
                    }, ReasonReact.element(/* None */0, /* None */0, Brewery.make(/* array */[])), $$Array.of_list(beers), ReasonReact.element(/* None */0, /* None */0, Contact.make(/* array */[]))), ReasonReact.element(/* None */0, /* None */0, Footer.make(/* array */[])));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* availableBeers : [] */0,
              /* selectedBeers : [] */0,
              /* shoppingCart : [] */0
            ];
    });
  return newrecord;
}

exports.click     = click;
exports.component = component;
exports.make      = make;
/* component Not a pure module */
